<!DOCTYPE html>
<html lang="ja">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>商品を出品する - mercari</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <script>
    tailwind.config = {
      theme: {
        extend: {
          colors: {
            'mercari': {
              50: '#fef2f2',
              100: '#fee2e2',
              200: '#fecaca',
              300: '#fca5a5',
              400: '#f87171',
              500: '#ea352d',
              600: '#dc2626',
              700: '#b91c1c',
              800: '#991b1b',
              900: '#7f1d1d',
            },
            'gray': {
              25: '#fcfcfd',
              750: '#374151',
              850: '#1f2937',
              950: '#030712'
            }
          },
          animation: {
            'fade-in': 'fadeIn 0.5s ease-out',
            'slide-up': 'slideUp 0.3s ease-out',
            'scale-in': 'scaleIn 0.2s ease-out',
            'float': 'float 3s ease-in-out infinite',
          },
          backdropBlur: {
            xs: '2px',
          }
        }
      }
    }
  </script>
  <style>
    @keyframes fadeIn {
      from { opacity: 0; transform: translateY(10px); }
      to { opacity: 1; transform: translateY(0); }
    }
    @keyframes slideUp {
      from { opacity: 0; transform: translateY(20px); }
      to { opacity: 1; transform: translateY(0); }
    }
    @keyframes scaleIn {
      from { opacity: 0; transform: scale(0.95); }
      to { opacity: 1; transform: scale(1); }
    }
    @keyframes float {
      0%, 100% { transform: translateY(0px); }
      50% { transform: translateY(-10px); }
    }
    
    .glass-morphism {
      background: rgba(255, 255, 255, 0.9);
      backdrop-filter: blur(10px);
      border: 1px solid rgba(255, 255, 255, 0.2);
    }
    
    .gradient-border {
      background: linear-gradient(white, white) padding-box,
                  linear-gradient(45deg, #ea352d, #f87171) border-box;
      border: 2px solid transparent;
    }
    
    .price-symbol {
      position: absolute;
      left: 20px;
      top: 50%;
      transform: translateY(-50%);
      color: #6b7280;
      font-weight: 700;
      font-size: 20px;
    }
    
    .price-input {
      padding-left: 50px;
      font-size: 24px;
      font-weight: 700;
      letter-spacing: -0.025em;
    }
    
    .upload-overlay {
      background: linear-gradient(135deg, rgba(234, 53, 45, 0.1) 0%, rgba(248, 113, 113, 0.1) 100%);
    }
    
    .section-enter {
      animation: fade-in 0.6s ease-out;
    }
    
    .interactive-hover {
      transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    }
    
    .interactive-hover:hover {
      transform: translateY(-2px);
      box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.15);
    }
  </style>
</head>

<body class="min-h-screen bg-gradient-to-br from-gray-50 via-white to-gray-100">
  <!-- Header -->
  <header class="sticky top-0 z-50 glass-morphism shadow-lg">
    <div class="max-w-6xl mx-auto px-6 py-4">
      <div class="flex items-center justify-between">
        <div class="flex items-center space-x-6">
          <div class="text-3xl font-black text-mercari-500 tracking-tight">
            mercari
          </div>
          <div class="hidden md:flex items-center space-x-2 text-sm font-medium text-gray-600">
            <span class="hover:text-mercari-500 cursor-pointer transition-colors">ホーム</span>
            <svg class="w-4 h-4 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
            </svg>
            <span class="text-mercari-500">出品</span>
          </div>
        </div>
        <div class="hidden md:block">
          <div class="px-4 py-2 bg-mercari-50 text-mercari-700 rounded-full text-sm font-semibold">
            商品出品フォーム
          </div>
        </div>
      </div>
    </div>
  </header>

  <div class="max-w-5xl mx-auto px-6 py-12">
    <!-- Hero Section -->
    <div class="text-center mb-16 section-enter">
      <h1 class="text-4xl md:text-5xl font-black text-gray-900 mb-4 tracking-tight">
        商品を<span class="text-mercari-500">出品</span>する
      </h1>
      <p class="text-xl text-gray-600 max-w-2xl mx-auto leading-relaxed">
        簡単なステップであなたの商品を世界中の人に届けましょう
      </p>
    </div>

    <!-- Progress Steps -->
    <div class="mb-16 section-enter" style="animation-delay: 0.2s">
      <div class="flex items-center justify-center">
        <div class="flex items-center space-x-8">
          <div class="flex items-center">
            <div class="relative">
              <div class="w-12 h-12 bg-mercari-500 rounded-2xl flex items-center justify-center shadow-lg">
                <span class="text-white font-bold text-lg">1</span>
              </div>
              <div class="absolute inset-0 w-12 h-12 bg-mercari-500 rounded-2xl animate-ping opacity-20"></div>
            </div>
            <span class="ml-3 text-lg font-bold text-gray-900">商品情報</span>
          </div>
          
          <div class="w-24 h-1 bg-gradient-to-r from-mercari-200 to-gray-200 rounded-full"></div>
          
          <div class="flex items-center opacity-50">
            <div class="w-12 h-12 bg-gray-200 rounded-2xl flex items-center justify-center">
              <span class="text-gray-500 font-bold text-lg">2</span>
            </div>
            <span class="ml-3 text-lg font-medium text-gray-500">確認</span>
          </div>
          
          <div class="w-24 h-1 bg-gray-200 rounded-full"></div>
          
          <div class="flex items-center opacity-50">
            <div class="w-12 h-12 bg-gray-200 rounded-2xl flex items-center justify-center">
              <span class="text-gray-500 font-bold text-lg">3</span>
            </div>
            <span class="ml-3 text-lg font-medium text-gray-500">完了</span>
          </div>
        </div>
      </div>
    </div>

    <!-- Error Messages -->
    <div id="errorMessages" class="hidden mb-8 section-enter">
      <div class="bg-red-50 border-l-4 border-red-400 rounded-r-xl p-6 shadow-sm">
        <div class="flex items-start">
          <svg class="w-6 h-6 text-red-500 mt-0.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
          </svg>
          <div class="ml-4">
            <h3 class="text-lg font-bold text-red-800">入力エラーがあります</h3>
            <ul id="errorList" class="mt-2 text-red-700 space-y-1"></ul>
          </div>
        </div>
      </div>
    </div>

    <form id="listingForm" class="space-y-12">
      <!-- 商品画像セクション -->
      <section class="section-enter interactive-hover" style="animation-delay: 0.3s">
        <div class="bg-white rounded-3xl shadow-xl border border-gray-100 overflow-hidden">
          <div class="bg-gradient-to-r from-mercari-500 to-mercari-400 px-8 py-6">
            <div class="flex items-center text-white">
              <div class="w-12 h-12 bg-white bg-opacity-20 rounded-xl flex items-center justify-center mr-4">
                <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
                </svg>
              </div>
              <div>
                <h2 class="text-2xl font-bold">商品の写真</h2>
                <p class="text-mercari-100 text-sm">最大10枚まで追加できます</p>
              </div>
            </div>
          </div>
          
          <div class="p-8">
            <label class="block text-lg font-bold text-gray-900 mb-6">
              商品画像
              <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-bold bg-mercari-500 text-white ml-3">
                必須
              </span>
            </label>
            
            <div id="uploadArea" class="upload-overlay border-3 border-dashed border-mercari-300 rounded-3xl p-12 text-center cursor-pointer transition-all duration-300 hover:border-mercari-500 hover:bg-mercari-50 group">
              <div class="animate-float">
                <div class="text-8xl mb-6 group-hover:scale-110 transition-transform duration-300">📸</div>
              </div>
              <h3 class="text-2xl font-bold text-gray-900 mb-2">写真をアップロード</h3>
              <p class="text-gray-600 mb-4">ドラッグ&ドロップ または クリックして選択</p>
              <div class="inline-flex items-center px-6 py-3 bg-white rounded-xl shadow-md text-sm font-semibold text-gray-700 border border-gray-200">
                <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12"></path>
                </svg>
                ファイルを選択
              </div>
              <p class="text-xs text-gray-500 mt-4">JPEG, PNG形式　最大10枚まで</p>
              <input type="file" id="images" name="images" multiple accept="image/*" class="hidden">
            </div>
            
            <div id="photoPreview" class="grid grid-cols-2 sm:grid-cols-3 lg:grid-cols-5 gap-6 mt-8">
              <!-- プレビュー画像がここに表示されます -->
            </div>
          </div>
        </div>
      </section>

      <!-- 商品詳細セクション -->
      <section class="section-enter interactive-hover" style="animation-delay: 0.4s">
        <div class="bg-white rounded-3xl shadow-xl border border-gray-100 overflow-hidden">
          <div class="bg-gradient-to-r from-blue-500 to-blue-400 px-8 py-6">
            <div class="flex items-center text-white">
              <div class="w-12 h-12 bg-white bg-opacity-20 rounded-xl flex items-center justify-center mr-4">
                <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
                </svg>
              </div>
              <div>
                <h2 class="text-2xl font-bold">商品の詳細</h2>
                <p class="text-blue-100 text-sm">カテゴリーと状態を選択してください</p>
              </div>
            </div>
          </div>
          
          <div class="p-8 space-y-8">
            <div class="space-y-4">
              <label class="block text-lg font-bold text-gray-900">
                カテゴリー
                <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-bold bg-mercari-500 text-white ml-3">必須</span>
              </label>
              <select id="category_id" name="category_id" class="w-full px-6 py-4 border-2 border-gray-200 rounded-xl bg-white focus:outline-none focus:border-mercari-500 focus:ring-4 focus:ring-mercari-100 transition-all duration-300 text-lg font-medium" required>
                <option value="">カテゴリーを選択してください</option>
                <option value="1">👕 ファッション</option>
                <option value="2">📱 家電・スマホ・カメラ</option>
                <option value="3">📚 本・音楽・ゲーム</option>
                <option value="4">⚽ スポーツ・レジャー</option>
                <option value="5">💄 コスメ・香水・美容</option>
                <option value="6">🏠 インテリア・住まい・小物</option>
                <option value="7">🎮 おもちゃ・ホビー・グッズ</option>
              </select>
            </div>
            
            <div class="space-y-4">
              <label class="block text-lg font-bold text-gray-900">
                商品の状態
                <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-bold bg-mercari-500 text-white ml-3">必須</span>
              </label>
              <select id="condition_id" name="condition_id" class="w-full px-6 py-4 border-2 border-gray-200 rounded-xl bg-white focus:outline-none focus:border-mercari-500 focus:ring-4 focus:ring-mercari-100 transition-all duration-300 text-lg font-medium" required>
                <option value="">状態を選択してください</option>
                <option value="1">✨ 新品、未使用</option>
                <option value="2">🌟 未使用に近い</option>
                <option value="3">😊 目立った傷や汚れなし</option>
                <option value="4">😐 やや傷や汚れあり</option>
                <option value="5">😞 傷や汚れあり</option>
                <option value="6">😰 全体的に状態が悪い</option>
              </select>
            </div>
          </div>
        </div>
      </section>

      <!-- 商品名と説明セクション -->
      <section class="section-enter interactive-hover" style="animation-delay: 0.5s">
        <div class="bg-white rounded-3xl shadow-xl border border-gray-100 overflow-hidden">
          <div class="bg-gradient-to-r from-purple-500 to-purple-400 px-8 py-6">
            <div class="flex items-center text-white">
              <div class="w-12 h-12 bg-white bg-opacity-20 rounded-xl flex items-center justify-center mr-4">
                <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"></path>
                </svg>
              </div>
              <div>
                <h2 class="text-2xl font-bold">商品名と説明</h2>
                <p class="text-purple-100 text-sm">魅力的な商品情報を入力してください</p>
              </div>
            </div>
          </div>
          
          <div class="p-8 space-y-8">
            <div class="space-y-4">
              <label class="block text-lg font-bold text-gray-900">
                商品名
                <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-bold bg-mercari-500 text-white ml-3">必須</span>
              </label>
              <input type="text" id="name" name="name" maxlength="40" class="w-full px-6 py-4 border-2 border-gray-200 rounded-xl focus:outline-none focus:border-mercari-500 focus:ring-4 focus:ring-mercari-100 transition-all duration-300 text-lg font-medium" placeholder="例：美品 iPhone 14 Pro 128GB ディープパープル" required>
            </div>
            
            <div class="space-y-4">
              <label class="block text-lg font-bold text-gray-900">
                商品の説明
                <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-bold bg-mercari-500 text-white ml-3">必須</span>
              </label>
              <textarea id="description" name="description" rows="8" maxlength="1000" class="w-full px-6 py-4 border-2 border-gray-200 rounded-xl focus:outline-none focus:border-mercari-500 focus:ring-4 focus:ring-mercari-100 transition-all duration-300 text-lg resize-none" placeholder="商品の詳細な説明を入力してください

• 色、素材、サイズなどの基本情報
• 購入時期や使用頻度
• 傷や汚れの状態
• その他特記事項

例：
2023年に購入したiPhone 14 Proです。
普段はケースとフィルムを使用していたため、
目立った傷や汚れはありません。
バッテリー状態も良好で、動作に問題ありません。" required></textarea>
            </div>
          </div>
        </div>
      </section>

      <!-- 配送情報セクション -->
      <section class="section-enter interactive-hover" style="animation-delay: 0.6s">
        <div class="bg-white rounded-3xl shadow-xl border border-gray-100 overflow-hidden">
          <div class="bg-gradient-to-r from-green-500 to-green-400 px-8 py-6">
            <div class="flex items-center text-white">
              <div class="w-12 h-12 bg-white bg-opacity-20 rounded-xl flex items-center justify-center mr-4">
                <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7h12m0 0l-4-4m4 4l-4 4m0 6H4m0 0l4 4m-4-4l4-4"></path>
                </svg>
              </div>
              <div>
                <h2 class="text-2xl font-bold">配送について</h2>
                <p class="text-green-100 text-sm">配送方法と発送情報を設定してください</p>
              </div>
            </div>
          </div>
          
          <div class="p-8 space-y-8">
            <div class="grid md:grid-cols-2 gap-8">
              <div class="space-y-4">
                <label class="block text-lg font-bold text-gray-900">
                  配送料の負担
                  <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-bold bg-mercari-500 text-white ml-3">必須</span>
                </label>
                <select id="shipping_fee_payer_id" name="shipping_fee_payer_id" class="w-full px-6 py-4 border-2 border-gray-200 rounded-xl bg-white focus:outline-none focus:border-mercari-500 focus:ring-4 focus:ring-mercari-100 transition-all duration-300 text-lg font-medium" required>
                  <option value="">選択してください</option>
                  <option value="1">📦 送料込み（出品者負担）</option>
                  <option value="2">💰 着払い（購入者負担）</option>
                </select>
              </div>
              
              <div class="space-y-4">
                <label class="block text-lg font-bold text-gray-900">
                  発送までの日数
                  <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-bold bg-mercari-500 text-white ml-3">必須</span>
                </label>
                <select id="shipping_day_id" name="shipping_day_id" class="w-full px-6 py-4 border-2 border-gray-200 rounded-xl bg-white focus:outline-none focus:border-mercari-500 focus:ring-4 focus:ring-mercari-100 transition-all duration-300 text-lg font-medium" required>
                  <option value="">選択してください</option>
                  <option value="1">⚡ 1〜2日で発送</option>
                  <option value="2">📅 2〜3日で発送</option>
                  <option value="3">📆 4〜7日で発送</option>
                </select>
              </div>
            </div>
            
            <div class="space-y-4">
              <label class="block text-lg font-bold text-gray-900">
                発送元の地域
                <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-bold bg-mercari-500 text-white ml-3">必須</span>
              </label>
              <select id="prefecture_id" name="prefecture_id" class="w-full px-6 py-4 border-2 border-gray-200 rounded-xl bg-white focus:outline-none focus:border-mercari-500 focus:ring-4 focus:ring-mercari-100 transition-all duration-300 text-lg font-medium" required>
                <option value="">都道府県を選択してください</option>
                <option value="1">北海道</option>
                <option value="2">青森県</option>
                <option value="3">岩手県</option>
                <option value="4">宮城県</option>
                <option value="5">秋田県</option>
                <option value="6">山形県</option>
                <option value="7">福島県</option>
                <option value="8">茨城県</option>
                <option value="9">栃木県</option>
                <option value="10">群馬県</option>
                <option value="11">埼玉県</option>
                <option value="12">千葉県</option>
                <option value="13">東京都</option>
                <option value="14">神奈川県</option>
                <option value="15">新潟県</option>
                <option value="16">富山県</option>
                <option value="17">石川県</option>
                <option value="18">福井県</option>
                <option value="19">山梨県</option>
                <option value="20">長野県</option>
                <option value="21">岐阜県</option>
                <option value="22">静岡県</option>
                <option value="23">愛知県</option>
                <option value="24">三重県</option>
                <option value="25">滋賀県</option>
                <option value="26">京都府</option>
                <option value="27">大阪府</option>
                <option value="28">兵庫県</option>
                <option value="29">奈良県</option>
                <option value="30">和歌山県</option>
                <option value="31">鳥取県</option>
                <option value="32">島根県</option>
                <option value="33">岡山県</option>
                <option value="34">広島県</option>
                <option value="35">山口県</option>
                <option value="36">徳島県</option>
                <option value="37">香川県</option>
                <option value="38">愛媛県</option>
                <option value="39">高知県</option>
                <option value="40">福岡県</option>
                <option value="41">佐賀県</option>
                <option value="42">長崎県</option>
                <option value="43">熊本県</option>
                <option value="44">大分県</option>
                <option value="45">宮崎県</option>
                <option value="46">鹿児島県</option>
                <option value="47">沖縄県</option>
              </select>
            </div>
          </div>
        </div>
      </section>

      <!-- 価格設定セクション -->
      <section class="section-enter interactive-hover" style="animation-delay: 0.7s">
        <div class="bg-white rounded-3xl shadow-xl border border-gray-100 overflow-hidden">
          <div class="bg-gradient-to-r from-yellow-500 to-orange-400 px-8 py-6">
            <div class="flex items-center text-white">
              <div class="w-12 h-12 bg-white bg-opacity-20 rounded-xl flex items-center justify-center mr-4">
                <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1"></path>
                </svg>
              </div>
              <div>
                <h2 class="text-2xl font-bold">販売価格</h2>
                <p class="text-yellow-100 text-sm">300円〜9,999,999円の範囲で設定してください</p>
              </div>
            </div>
          </div>
          
          <div class="p-8">
            <div class="space-y-6">
              <label class="block text-lg font-bold text-gray-900">
                価格設定
                <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-bold bg-mercari-500 text-white ml-3">必須</span>
              </label>
              
              <div class="relative">
                <span class="price-symbol">¥</span>
                <input type="number" id="price" name="price" min="300" max="9999999" class="w-full px-6 py-6 border-2 border-gray-200 rounded-xl focus:outline-none focus:border-yellow-500 focus:ring-4 focus:ring-yellow-100 transition-all duration-300 price-input text-gray-900" placeholder="0" required>
              </div>
              
              <div class="bg-gradient-to-r from-gray-50 to-gray-100 rounded-2xl p-6 border border-gray-200">
                <div class="space-y-4">
                  <div class="flex justify-between items-center">
                    <span class="text-gray-700 font-medium">販売手数料 (10%)</span>
                    <span id="fee" class="text-xl font-bold text-gray-900">¥ -</span>
                  </div>
                  <div class="border-t border-gray-300 pt-4">
                    <div class="flex justify-between items-center">
                      <span class="text-2xl font-bold text-gray-900">販売利益</span>
                      <span id="profit" class="text-3xl font-black text-mercari-500">¥ -</span>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </section>

      <!-- 出品ボタンセクション -->
      <section class="section-enter" style="animation-delay: 0.8s">
        <div class="bg-white rounded-3xl shadow-xl border border-gray-100 p-10 text-center">
          <div class="max-w-2xl mx-auto space-y-8">
            <div class="space-y-4">
              <h3 class="text-2xl font-bold text-gray-900">出品の準備が完了しました</h3>
              <p class="text-gray-600">内容を確認して出品ボタンを押してください</p>
            </div>
            
            <div class="flex flex-col sm:flex-row gap-6 justify-center items-center">
              <button type="button" id="draftBtn" class="group relative px-8 py-4 bg-gray-100 text-gray-700 rounded-2xl font-bold text-lg hover:bg-gray-200 transition-all duration-300 hover:scale-105 active:scale-95">
                <div class="flex items-center">
                  <svg class="w-5 h-5 mr-3 group-hover:rotate-12 transition-transform duration-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
                  </svg>
                  下書きに保存
                </div>
              </button>
              
              <button type="submit" class="group relative px-12 py-5 bg-gradient-to-r from-mercari-500 to-mercari-600 text-white rounded-2xl font-black text-xl shadow-2xl hover:shadow-3xl transition-all duration-300 hover:scale-105 active:scale-95 disabled:opacity-50 disabled:cursor-not-allowed disabled:transform-none">
                <div class="flex items-center">
                  <svg class="w-6 h-6 mr-3 group-hover:rotate-12 transition-transform duration-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z"></path>
                  </svg>
                  出品する
                </div>
                <div class="absolute inset-0 rounded-2xl bg-gradient-to-r from-mercari-400 to-mercari-500 opacity-0 group-hover:opacity-100 transition-opacity duration-300 -z-10"></div>
              </button>
            </div>
            
            <div class="bg-gradient-to-r from-gray-50 to-gray-100 rounded-2xl p-6 text-left">
              <div class="flex items-start space-x-4">
                <div class="flex-shrink-0">
                  <svg class="w-6 h-6 text-mercari-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                  </svg>
                </div>
                <div class="text-sm text-gray-700 space-y-2">
                  <p class="font-semibold text-gray-900">出品前の確認事項</p>
                  <ul class="space-y-1 text-gray-600">
                    <li>• 禁止されている出品物でないか確認してください</li>
                    <li>• 商品情報に虚偽の記載がないか確認してください</li>
                    <li>• 他者の権利を侵害していないか確認してください</li>
                  </ul>
                  <p class="text-xs text-gray-500 mt-3">
                    出品することで<a href="#" class="text-mercari-500 hover:underline font-medium">利用規約</a>に同意したものとみなされます
                  </p>
                </div>
              </div>
            </div>
          </div>
        </div>
      </section>
    </form>
  </div>

  <script>
    document.addEventListener('DOMContentLoaded', function() {
      // 価格計算機能
      const priceInput = document.getElementById('price');
      const feeElement = document.getElementById('fee');
      const profitElement = document.getElementById('profit');

      if (priceInput && feeElement && profitElement) {
        priceInput.addEventListener('input', function() {
          const price = parseInt(this.value) || 0;
          const fee = Math.floor(price * 0.1);
          const profit = price - fee;

          feeElement.textContent = `¥ ${fee.toLocaleString()}`;
          profitElement.textContent = `¥ ${profit.toLocaleString()}`;
        });
      }

      // 下書き保存機能
      const draftBtn = document.getElementById('draftBtn');
      if (draftBtn) {
        draftBtn.addEventListener('click', function() {
          // アニメーション付きの成功メッセージ
          const notification = document.createElement('div');
          notification.className = 'fixed top-6 right-6 bg-white border border-gray-200 rounded-2xl shadow-2xl p-6 z-50 transform transition-all duration-500 scale-in max-w-sm';
          notification.innerHTML = `
            <div class="flex items-center space-x-4">
              <div class="flex-shrink-0">
                <div class="w-12 h-12 bg-green-100 rounded-full flex items-center justify-center">
                  <svg class="w-6 h-6 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                  </svg>
                </div>
              </div>
              <div>
                <h4 class="text-lg font-bold text-gray-900">下書き保存完了</h4>
                <p class="text-sm text-gray-600">商品情報を下書きに保存しました</p>
              </div>
            </div>
          `;
          document.body.appendChild(notification);
          
          setTimeout(() => {
            notification.style.transform = 'translateX(100%)';
            setTimeout(() => notification.remove(), 500);
          }, 3000);
        });
      }

      // 画像アップロード機能
      const imageInput = document.getElementById('images');
      const uploadArea = document.getElementById('uploadArea');
      
      // クリックでファイル選択
      uploadArea.addEventListener('click', function() {
        imageInput.click();
      });
      
      // ドラッグ&ドロップ機能
      uploadArea.addEventListener('dragover', function(e) {
        e.preventDefault();
        this.classList.add('border-mercari-500', 'bg-mercari-50');
      });
      
      uploadArea.addEventListener('dragleave', function(e) {
        e.preventDefault();
        this.classList.remove('border-mercari-500', 'bg-mercari-50');
      });
      
      uploadArea.addEventListener('drop', function(e) {
        e.preventDefault();
        this.classList.remove('border-mercari-500', 'bg-mercari-50');
        
        const files = e.dataTransfer.files;
        if (files.length > 0) {
          imageInput.files = files;
          previewImages(files);
        }
      });

      // 画像プレビュー機能
      imageInput.addEventListener('change', function() {
        previewImages(this.files);
      });
      
      function previewImages(files) {
        const previewArea = document.getElementById('photoPreview');
        
        if (previewArea && files.length > 0) {
          previewArea.innerHTML = '';
          
          const maxFiles = Math.min(files.length, 10);
          
          for (let i = 0; i < maxFiles; i++) {
            const file = files[i];
            
            if (file.type.startsWith('image/')) {
              const reader = new FileReader();
              
              reader.onload = function(e) {
                const photoItem = document.createElement('div');
                photoItem.className = 'relative group animate-scale-in';
                photoItem.style.animationDelay = `${i * 0.1}s`;
                
                photoItem.innerHTML = `
                  <div class="aspect-square rounded-2xl overflow-hidden border-2 border-gray-200 hover:border-mercari-500 transition-all duration-300 shadow-lg hover:shadow-2xl group-hover:scale-105">
                    <img src="${e.target.result}" alt="プレビュー画像" class="w-full h-full object-cover">
                  </div>
                  <button type="button" class="absolute -top-3 -right-3 w-8 h-8 bg-mercari-500 text-white rounded-full flex items-center justify-center text-sm font-bold shadow-xl hover:bg-mercari-600 transition-all duration-200 opacity-0 group-hover:opacity-100 hover:scale-110" onclick="removeImage(this)">
                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                    </svg>
                  </button>
                  <div class="absolute bottom-2 left-2 bg-black bg-opacity-60 text-white text-xs px-2 py-1 rounded-lg font-bold">
                    ${i + 1}
                  </div>
                `;
                
                previewArea.appendChild(photoItem);
              };
              
              reader.readAsDataURL(file);
            }
          }
          
          // 10枚を超える場合の警告
          if (files.length > 10) {
            const warning = document.createElement('div');
            warning.className = 'col-span-full bg-gradient-to-r from-yellow-50 to-orange-50 border-2 border-yellow-200 rounded-2xl p-6 flex items-center space-x-4 animate-slide-up';
            warning.innerHTML = `
              <div class="flex-shrink-0">
                <svg class="w-8 h-8 text-yellow-600" fill="currentColor" viewBox="0 0 20 20">
                  <path fill-rule="evenodd" d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z" clip-rule="evenodd"></path>
                </svg>
              </div>
              <div>
                <h4 class="text-lg font-bold text-yellow-800">アップロード制限</h4>
                <p class="text-yellow-700">画像は最大10枚まで表示されます。${files.length - 10}枚の画像が除外されました。</p>
              </div>
            `;
            previewArea.appendChild(warning);
          }
        }
      }
      
      // 画像削除機能
      window.removeImage = function(button) {
        const photoItem = button.parentElement;
        photoItem.style.transform = 'scale(0)';
        photoItem.style.opacity = '0';
        setTimeout(() => photoItem.remove(), 300);
      };

      // フォーム送信処理
      const form = document.getElementById('listingForm');
      if (form) {
        form.addEventListener('submit', function(e) {
          e.preventDefault();
          
          // バリデーション
          const requiredFields = form.querySelectorAll('[required]');
          let hasError = false;
          const errors = [];
          
          requiredFields.forEach(field => {
            if (!field.value.trim()) {
              hasError = true;
              field.classList.add('border-red-500', 'ring-red-500');
              
              const label = form.querySelector(`label[for="${field.id}"]`) || 
                           field.previousElementSibling;
              if (label) {
                errors.push(`${label.textContent.replace('必須', '').trim()}を入力してください`);
              }
            } else {
              field.classList.remove('border-red-500', 'ring-red-500');
            }
          });
          
          if (hasError) {
            // エラーメッセージを表示
            const errorDiv = document.getElementById('errorMessages');
            const errorList = document.getElementById('errorList');
            errorList.innerHTML = errors.map(error => `<li>• ${error}</li>`).join('');
            errorDiv.classList.remove('hidden');
            
            // ページトップにスクロール
            window.scrollTo({ top: 0, behavior: 'smooth' });
            return;
          }
          
          // 成功モーダル表示
          const modal = document.createElement('div');
          modal.className = 'fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 backdrop-blur-sm';
          modal.innerHTML = `
            <div class="bg-white rounded-3xl p-12 mx-4 max-w-lg text-center shadow-2xl transform transition-all duration-500 scale-in">
              <div class="animate-float mb-8">
                <div class="text-8xl">🎉</div>
              </div>
              <h3 class="text-3xl font-black text-gray-900 mb-4">出品完了！</h3>
              <p class="text-gray-600 mb-8 text-lg leading-relaxed">
                商品が正常に出品されました。<br>
                購入者からの連絡をお待ちください。
              </p>
              <button onclick="this.parentElement.parentElement.remove()" class="bg-gradient-to-r from-mercari-500 to-mercari-600 text-white px-12 py-4 rounded-2xl font-bold text-lg hover:from-mercari-600 hover:to-mercari-700 transition-all duration-300 transform hover:scale-105 shadow-xl">
                完了
              </button>
            </div>
          `;
          document.body.appendChild(modal);
        });
      }
      
      // 文字数カウンター
      function addCharacterCounter(input, maxLength) {
        const counter = document.createElement('div');
        counter.className = 'text-sm text-gray-500 mt-2 text-right font-medium';
        counter.textContent = `0 / ${maxLength}`;
        input.parentNode.appendChild(counter);
        
        input.addEventListener('input', function() {
          const length = this.value.length;
          counter.textContent = `${length} / ${maxLength}`;
          
          if (length > maxLength * 0.8) {
            counter.classList.add('text-yellow-600');
          } else if (length === maxLength) {
            counter.classList.remove('text-yellow-600');
            counter.classList.add('text-red-600');
          } else {
            counter.classList.remove('text-yellow-600', 'text-red-600');
          }
        });
      }
      
      const nameInput = document.getElementById('name');
      const descriptionInput = document.getElementById('description');
      
      if (nameInput) addCharacterCounter(nameInput, 40);
      if (descriptionInput) addCharacterCounter(descriptionInput, 1000);
      
      // スクロール時のアニメーション
      const observerOptions = {
        threshold: 0.1,
        rootMargin: '0px 0px -50px 0px'
      };
      
      const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
          if (entry.isIntersecting) {
            entry.target.style.animationPlayState = 'running';
          }
        });
      }, observerOptions);
      
      document.querySelectorAll('.section-enter').forEach(section => {
        observer.observe(section);
      });
    });
  </script>
</body>
</html>